# Generated by Django 4.2.7 on 2025-09-11 06:34

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):
    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        (
            "accounts",
            "0003_permission_role_alter_user_options_user_department_and_more",
        ),
    ]

    operations = [
        migrations.CreateModel(
            name="RBACRole",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("display_name", models.CharField(max_length=150)),
                ("description", models.TextField(blank=True)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("medical", "Medical Staff"),
                            ("technical", "Technical Staff"),
                            ("administrative", "Administrative"),
                            ("system", "System Roles"),
                            ("custom", "Custom Roles"),
                        ],
                        default="custom",
                        max_length=20,
                    ),
                ),
                (
                    "security_level",
                    models.IntegerField(
                        choices=[
                            (1, "Basic"),
                            (2, "Standard"),
                            (3, "Elevated"),
                            (4, "Administrative"),
                            (5, "Super Admin"),
                        ],
                        default=1,
                    ),
                ),
                ("is_system_role", models.BooleanField(default=False)),
                ("requires_approval", models.BooleanField(default=False)),
                ("max_session_duration", models.DurationField(blank=True, null=True)),
                ("ip_restriction_enabled", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_roles",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent_role",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.rbacrole",
                    ),
                ),
                (
                    "permissions",
                    models.ManyToManyField(blank=True, to="auth.permission"),
                ),
            ],
            options={
                "db_table": "rbac_roles",
                "ordering": ["security_level", "name"],
            },
        ),
        migrations.CreateModel(
            name="UserSession",
            fields=[
                (
                    "session_key",
                    models.CharField(max_length=40, primary_key=True, serialize=False),
                ),
                ("ip_address", models.GenericIPAddressField()),
                ("user_agent", models.TextField()),
                ("location", models.CharField(blank=True, max_length=200)),
                ("is_suspicious", models.BooleanField(default=False)),
                ("risk_score", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_activity", models.DateTimeField(auto_now=True)),
                ("expires_at", models.DateTimeField()),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="active_sessions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "user_sessions",
                "ordering": ["-last_activity"],
            },
        ),
        migrations.CreateModel(
            name="UserSecurityProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("force_password_change", models.BooleanField(default=False)),
                ("password_expires_at", models.DateTimeField(blank=True, null=True)),
                ("failed_login_attempts", models.IntegerField(default=0)),
                ("last_failed_login", models.DateTimeField(blank=True, null=True)),
                ("account_locked_until", models.DateTimeField(blank=True, null=True)),
                ("allowed_ip_addresses", models.JSONField(blank=True, default=list)),
                ("session_timeout_minutes", models.IntegerField(default=60)),
                ("concurrent_sessions_allowed", models.IntegerField(default=1)),
                ("last_compliance_check", models.DateTimeField(blank=True, null=True)),
                ("requires_reauthorization", models.BooleanField(default=False)),
                (
                    "data_access_level",
                    models.CharField(default="standard", max_length=20),
                ),
                (
                    "account_status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("suspended", "Suspended"),
                            ("locked", "Locked"),
                            ("pending_approval", "Pending Approval"),
                            ("expired", "Expired"),
                            ("archived", "Archived"),
                        ],
                        default="pending_approval",
                        max_length=20,
                    ),
                ),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="approved_users",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="security_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "user_security_profiles",
            },
        ),
        migrations.CreateModel(
            name="RBACPermissionGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("display_name", models.CharField(max_length=150)),
                ("description", models.TextField(blank=True)),
                ("category", models.CharField(max_length=50)),
                ("is_critical", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("permissions", models.ManyToManyField(to="auth.permission")),
            ],
            options={
                "db_table": "rbac_permission_groups",
                "ordering": ["category", "name"],
            },
        ),
        migrations.CreateModel(
            name="UserActivityLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "activity_type",
                    models.CharField(
                        choices=[
                            ("login", "Login"),
                            ("logout", "Logout"),
                            ("password_change", "Password Change"),
                            ("role_change", "Role Change"),
                            ("permission_change", "Permission Change"),
                            ("profile_update", "Profile Update"),
                            ("data_access", "Data Access"),
                            ("system_action", "System Action"),
                            ("security_event", "Security Event"),
                            ("admin_action", "Admin Action"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        default="low",
                        max_length=10,
                    ),
                ),
                ("action", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("ip_address", models.GenericIPAddressField()),
                ("user_agent", models.TextField(blank=True)),
                ("session_id", models.CharField(blank=True, max_length=100)),
                ("success", models.BooleanField(default=True)),
                ("error_message", models.TextField(blank=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "performed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="performed_actions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="activity_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "user_activity_logs",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["user", "-timestamp"],
                        name="user_activi_user_id_0a625a_idx",
                    ),
                    models.Index(
                        fields=["activity_type", "-timestamp"],
                        name="user_activi_activit_313425_idx",
                    ),
                    models.Index(
                        fields=["severity", "-timestamp"],
                        name="user_activi_severit_ab2023_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="RoleAssignment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending Approval"),
                            ("approved", "Approved"),
                            ("active", "Active"),
                            ("expired", "Expired"),
                            ("revoked", "Revoked"),
                            ("rejected", "Rejected"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("reason", models.TextField(blank=True)),
                ("conditions", models.JSONField(blank=True, default=dict)),
                (
                    "effective_from",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="approved_role_assignments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "requested_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="requested_roles",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assignments",
                        to="accounts.rbacrole",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="role_assignments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "role_assignments",
                "ordering": ["-created_at"],
                "unique_together": {("user", "role")},
            },
        ),
    ]
