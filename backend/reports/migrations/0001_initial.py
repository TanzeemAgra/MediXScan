# Generated by Django 4.2.7 on 2025-09-09 06:10

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ErrorCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("medical", "Medical Error"),
                            ("typographical", "Typographical Error"),
                            ("misspelled", "Misspelled Word"),
                            ("grammatical", "Grammatical Error"),
                            ("formatting", "Formatting Error"),
                        ],
                        max_length=50,
                        unique=True,
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "severity_level",
                    models.IntegerField(
                        default=1, help_text="1=Low, 2=Medium, 3=High, 4=Critical"
                    ),
                ),
                (
                    "color_code",
                    models.CharField(
                        default="#FF0000",
                        help_text="Hex color code for UI",
                        max_length=7,
                    ),
                ),
            ],
            options={
                "verbose_name": "Error Category",
                "verbose_name_plural": "Error Categories",
            },
        ),
        migrations.CreateModel(
            name="ReportAnalysis",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "original_text",
                    models.TextField(help_text="Original radiology report text"),
                ),
                (
                    "analyzed_text",
                    models.TextField(
                        blank=True,
                        help_text="Analyzed text with corrections",
                        null=True,
                    ),
                ),
                (
                    "highlighted_report",
                    models.TextField(
                        blank=True, help_text="HTML highlighted report", null=True
                    ),
                ),
                (
                    "diagnostic_discrepancies",
                    models.JSONField(
                        blank=True, default=list, help_text="List of found errors"
                    ),
                ),
                (
                    "summary",
                    models.TextField(
                        blank=True, help_text="Analysis summary", null=True
                    ),
                ),
                (
                    "confidence_score",
                    models.FloatField(
                        default=0.0, help_text="Analysis confidence score"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "processing_time",
                    models.FloatField(
                        blank=True,
                        help_text="Time taken for analysis in seconds",
                        null=True,
                    ),
                ),
                (
                    "uploaded_file",
                    models.FileField(
                        blank=True,
                        help_text="Original uploaded file",
                        null=True,
                        upload_to="reports/%Y/%m/%d/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["txt", "pdf", "doc", "docx"]
                            )
                        ],
                    ),
                ),
                ("file_name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "file_size",
                    models.PositiveIntegerField(
                        blank=True, help_text="File size in bytes", null=True
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="report_analyses",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Report Analysis",
                "verbose_name_plural": "Report Analyses",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ReportTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "template_content",
                    models.TextField(help_text="Template content with placeholders"),
                ),
                (
                    "category",
                    models.CharField(
                        help_text="e.g., 'Chest X-Ray', 'CT Scan', etc.", max_length=100
                    ),
                ),
                ("usage_count", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_templates",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Report Template",
                "verbose_name_plural": "Report Templates",
                "ordering": ["-usage_count", "name"],
            },
        ),
        migrations.CreateModel(
            name="ReportError",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "original_text",
                    models.CharField(
                        help_text="Original incorrect text", max_length=500
                    ),
                ),
                (
                    "corrected_text",
                    models.CharField(help_text="Suggested correction", max_length=500),
                ),
                (
                    "position_start",
                    models.PositiveIntegerField(
                        help_text="Start position in original text"
                    ),
                ),
                (
                    "position_end",
                    models.PositiveIntegerField(
                        help_text="End position in original text"
                    ),
                ),
                (
                    "context",
                    models.TextField(
                        blank=True, help_text="Surrounding context", null=True
                    ),
                ),
                (
                    "confidence_score",
                    models.FloatField(
                        default=0.0, help_text="Confidence in this correction"
                    ),
                ),
                (
                    "explanation",
                    models.TextField(
                        blank=True, help_text="Why this is an error", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "analysis",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="errors",
                        to="reports.reportanalysis",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="reports.errorcategory",
                    ),
                ),
            ],
            options={
                "verbose_name": "Report Error",
                "verbose_name_plural": "Report Errors",
                "ordering": ["position_start"],
            },
        ),
        migrations.CreateModel(
            name="AnalyticsData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("total_reports_analyzed", models.PositiveIntegerField(default=0)),
                ("total_errors_found", models.PositiveIntegerField(default=0)),
                ("avg_confidence_score", models.FloatField(default=0.0)),
                ("avg_processing_time", models.FloatField(default=0.0)),
                ("medical_errors", models.PositiveIntegerField(default=0)),
                ("typographical_errors", models.PositiveIntegerField(default=0)),
                ("misspelled_errors", models.PositiveIntegerField(default=0)),
                ("grammatical_errors", models.PositiveIntegerField(default=0)),
                ("formatting_errors", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analytics",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Analytics Data",
                "verbose_name_plural": "Analytics Data",
                "ordering": ["-date"],
                "unique_together": {("user", "date")},
            },
        ),
    ]
